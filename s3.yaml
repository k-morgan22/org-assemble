AWSTemplateFormatVersion: 2010-09-09
Description: Template to create an encrypted logging bucket, cloudtrail logs, IAM Role,  and an encrypted storage bucket|
  
# Parameters:
  
Resources:
  cloudtrailBucket:
    DeletionPolicy: Retain 
    UpdateReplacePolicy: Retain 
    Type: "AWS::S3::Bucket"
    Properties:
      AccessControl: LogDeliveryWrite
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      BucketName: !Sub ${AWS::AccountId}-logs-do-not-delete
      LoggingConfiguration:
        DestinationBucketName: !Sub ${AWS::AccountId}-logs-do-not-delete
  cloudtrailBucketPolicy:
    Type: "AWS::S3::BucketPolicy"
    Properties:
      Bucket: !Ref cloudtrailBucket
      PolicyDocument: 
        Version: "2012-10-17"
        Statement:
          - Sid: AWSCloudTrailAclCheck
            Effect: Allow
            Principal:
              Service: cloudtrail.amazonaws.com
            Action: s3:GetBucketAcl
            Resource: !Sub arn:aws:s3:::${cloudtrailBucket}
          - Sid: AWSCloudTrailWrite
            Effect: Allow
            Principal:
              Service: cloudtrail.amazonaws.com
            Action: s3:PutObject
            Resource: !Sub arn:aws:s3:::${cloudtrailBucket}/AWSLogs/${AWS::AccountId}/*
            Condition:
              StringEquals:
                s3:x-amz-acl: 'bucket-owner-full-control'
  accountTrail:
    DependsOn:
      - cloudtrailBucket
      - cloudtrailBucketPolicy
    Type: "AWS::CloudTrail::Trail"
    Properties:
      EventSelectors:
        - DataResources:
          - Type: AWS::S3::Object
            Values:
              - !Sub arn:aws:s3:::${encryptedBucket}/
      EnableLogFileValidation: true
      IsLogging: true
      S3BucketName: !Ref cloudtrailBucket
      TrailName: !Sub ${AWS::AccountId}-trail-do-not-delete
  encryptedBucket:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      BucketName: !Sub ${AWS::AccountId}-storage-bucket
      LoggingConfiguration:
        DestinationBucketName: !Sub ${AWS::AccountId}-logs-do-not-delete
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
  encryptedBucketRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement:
          - Sid: AllowAssumeRole
            Effect: Allow
            Principal:
              AWS: !Sub ${AWS::AccountId}
            Action: sts:AssumeRole
      Description: Minimum privilege role, allowing read & write to s3 bucket
      MaxSessionDuration: 3600
      RoleName: LimitedS3User
  rolePolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyDocument: 
        Version: "2012-10-17"
        Statement:
          - Sid: ListObjectsInBucket
            Effect: Allow
            Action: s3:ListBucket
            Resource: !GetAtt encryptedBucket.Arn
          - Sid: AllowReadWrite
            Effect: Allow
            Action: 
            - s3:PutObject
            - s3:Getobject
            Resource: !Sub arn:aws:s3:::${encryptedBucket}/*
      PolicyName: s3UserAccess
      Roles:
        - !Ref encryptedBucketRole

  
Outputs: 
  cloudtrailBucketName:
    Description: name of cloudtrail bucket 
    Value: !Ref cloudtrailBucket
